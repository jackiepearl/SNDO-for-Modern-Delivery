using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.AspNetCore.Identity;
using System.ComponentModel.DataAnnotations;

namespace Team1FinalProject.Models
{
    public class AppUser : IdentityUser
    {

        public String FirstName { get; set; }       
        public String LastName { get; set; }
        public String StAddress { get; set; }
        public String City { get; set; }
        public String State { get; set; }
        public String ZipCode { get; set; }
        //public String CreditCard1 { get; set; }
        //public String CreditCard2 { get; set; }
        //public String CreditCard3 { get; set; }
        public Boolean AccountActive { get; set; }

        public String FullName
        {
            get { return FirstName +" "+ LastName; }
        }

        public int NumPurchasedBooks
        {
            get { return Orders.Sum(o => o.NumberOfBooks);
 }
        }

        [DisplayFormat(DataFormatString = "{0:C}")]
        public Decimal TotalRev
        {
            get { return Orders.Sum(o => o.OrderSubtotal); }
        }
        [DisplayFormat(DataFormatString = "{0:C}")]
        public Decimal WAC
        {
            get { return Orders.Sum(o => o.WACC); }
        }

        [DisplayFormat(DataFormatString = "{0:C}")]
        public Decimal ProfitMargin
        {
            get { return Orders.Sum(o => o.OrderMargin); }
        }

        public int NumReviewsApproved { get; set; }

        public int NumReviewsRejected { get; set; }
        
        public AppUser()
        {
            if(Orders == null)
            {
                Orders = new List<Order>();
            }
        }

        //ID is auto generated by Identity
        //public int UserID {get;set;}
        //Password is stored through identity
        //public String Password { get; set; }
        //I don't think we need to include the middle initial
        //public String? MiddleInitial { get; set; }

        [InverseProperty("Author")]
        public List<Review> ReviewsWritten { get; set; }
        [InverseProperty("Approver")]
        public List<Review> ReviewsApproved { get; set; }

        public List<Order> Orders { get; set; }
        public List<CreditCard> CreditCards { get; set; }
    }
}
